{
  "ver": "1.0.27",
  "uuid": "997d67af-8621-4cdb-99bd-8565f720b118",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\n precision highp float;\n#if USE_ALPHA_TEST\n#endif\nuniform vec4 cc_time;\n varying vec4 v_color;\n #if USE_TEXTURE\n varying vec2 v_uv0;\n uniform sampler2D texture;\n uniform sampler2D outTexture;\n #endif\n void main () {\n   vec4 texColor1 = texture2D(texture, v_uv0);\n   vec4 texColor2 = texture2D(outTexture, v_uv0);\n   float t = abs(cos(cc_time.x));\n   vec4 resColor = vec4(1.0,0.98,0.99,0.2);\n   if (t > v_uv0.x){\n     resColor = mix(resColor,texColor2,t);\n   }else{\n     resColor = mix(texColor1,resColor,t);\n   }\n   gl_FragColor = resColor;\n }"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\n precision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n in vec4 v_color;\n #if USE_TEXTURE\n in vec2 v_uv0;\n uniform sampler2D texture;\n uniform sampler2D outTexture;\n #endif\n void main () {\n   vec4 texColor1 = texture(texture, v_uv0);\n   vec4 texColor2 = texture(outTexture, v_uv0);\n   float t = abs(cos(cc_time.x));\n   vec4 resColor = vec4(1.0,0.98,0.99,0.2);\n   if (t > v_uv0.x){\n     resColor = mix(resColor,texColor2,t);\n   }else{\n     resColor = mix(texColor1,resColor,t);\n   }\n   gl_FragColor = resColor;\n }"
      }
    }
  ],
  "subMetas": {}
}